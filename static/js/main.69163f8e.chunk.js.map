{"version":3,"sources":["utils/UiComponents.js","store/types.js","services/api.js","store/actions/weatherAction.js","components/subComponents/FiveDaysWeatherList.js","components/subComponents/CurrentCityConditions.js","components/SearchWeather.js","store/actions/favoritesWeatherAction.js","components/FevoritesWeatherCities.js","pages/HomeWeather.js","store/reducers/weatherReducer.js","store/reducers/favoritesWeatherReducer.js","store/reducers/index.js","store/store.js","App.js","reportWebVitals.js","index.js"],"names":["SearchValueTextField","withStyles","theme","root","backgroundColor","height","TextField","StyledAutoCompleteSearchValue","width","marginBottom","inputRoot","borderRadius","color","fontWeight","fontSize","padding","display","alignItems","borderColor","paper","margin","popupIndicator","option","clearIndicator","Autocomplete","StyledTabs","borderBottom","minHeight","indicator","Tabs","SelectButton","boxShadow","Button","StyleContentCard","maxWidth","CardContent","StyleActionsCard","CardActionArea","useStyles","makeStyles","typography","font","cardDailyItem","cardDailyTypography","cardDailyTypographyDeg","marginLeft","cardTypographyCondiTion","typographyAddRemoveFav","favoriteIcon","typographys","warning","weatherMainItem","currentWeatherItem","WEATHER_SEARCH_SUCCESS","WEATHER_FIVE_DAYS_SUCCESS","WEATHER_CURRENT_SUCCESS","ADD_WEATHER_FAVORITE_SUCCESS","REMOVE_WEATHER_FAVORITE_SUCCESS","WEATHER_SEARCH_ERROR","WEATHER_FIVE_DAYS_ERROR","WEATHER_CURRENT_ERROR","ADD_WEATHER_FAVORITES_ERROR","REMOVE_WEATHER_FAVORITES_ERROR","WEATHER_URLS","FIVE_DAYS_FORECASTS","SEARCH_CITIES_AUTOCOMPLETE","CURRENT_CONDITIONS","BASE_URL","apiKey","getWeatherListSearch","searchInput","dispatch","a","request","apikey","q","axios","get","res","type","payload","data","searchValue","getWeatherFiveDays","cityKey","console","log","resData","days","formatedWeatherArray","DailyForecasts","forEach","v","Date","EpochDate","obj","dayOfWeek","getDay","temperature","Temperature","push","cuurWeatherKey","getCurrentWeather","localizedName","currWether","weatherText","WeatherText","FiveDaysWeatherList","props","weatherFiveDays","classes","Grid","container","direction","spacing","map","u","index","item","xs","Card","Typography","className","Minimum","Value","Maximum","Unit","CurrentCityConditions","Metric","SearchWeather","useDispatch","weatherList","useSelector","state","weatherSearchList","weatherFavoritesList","cuurWeatherKeyStateInd","loading","error","useState","setInputSearchValue","useEffect","Object","keys","length","isFavorite","find","favorite","toggleFavoriteWeather","deleteItemFromFavorites","justify","align","disableClearable","id","forcePopupIcon","options","getOptionLabel","LocalizedName","onChange","event","newValue","searchItem","Key","handleSearchValue","onInputChange","e","renderInput","params","variant","InputProps","style","endAdornment","InputAdornment","fullWidth","onClick","FevoritesWeatherCities","clickHandler","favoritesListLength","favoriteItem","disableSpacing","displayFavoriteItem","TabPanel","children","value","other","role","hidden","Box","p","a11yProps","flexGrow","palette","background","HomeWeather","React","setValue","handleChange","AppBar","position","Tab","label","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","mainTheme","createMuiTheme","primary","main","secondary","fontFamily","join","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69163f8e.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  Tabs,\r\n  Button,\r\n  TextField,\r\n  CardContent,\r\n  CardActionArea\r\n} from '@material-ui/core'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\n\r\nexport const SearchValueTextField = withStyles((theme) => ({\r\n  root: {\r\n    '& .MuiOutlinedInput-root': {\r\n      backgroundColor: '#c1c0b9',\r\n      height: '3rem',\r\n      '& fieldset': {},\r\n      '&:hover fieldset': {}\r\n    }\r\n  }\r\n}))(TextField)\r\nexport const StyledAutoCompleteSearchValue = withStyles((theme) => ({\r\n  root: {\r\n    width: '30rem',\r\n    marginBottom: '5rem',\r\n    '& .MuiFormControl-root ': {\r\n      '&:hover': {\r\n        backgroundColor: '#c1c0b9'\r\n      }\r\n    }\r\n  },\r\n  inputRoot: {\r\n    '&.MuiOutlinedInput-root ': {\r\n      borderRadius: 0\r\n    },\r\n    '&.MuiIconButton-root': {\r\n      color: '#212529'\r\n    },\r\n    color: '#B6B6B6',\r\n    fontWeight: 300,\r\n    fontSize: 17,\r\n    backgroundColor: '#c1c0b9',\r\n    '&[class*=\"MuiOutlinedInput-root\"] .MuiAutocomplete-input:first-child': {\r\n      padding: '0.1rem 0 0.1rem 0.5rem'\r\n    },\r\n    '&.MuiAutocomplete-inputRoot[class*=\"MuiOutlinedInput-root\"].MuiAutocomplete-endAdornment':\r\n      {\r\n        height: 16,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        // top: 'calc(50% - 9px) !important',\r\n        '& .MuiAutocomplete-clearIndicator ': {\r\n          //   padding: 15\r\n        }\r\n      },\r\n    '&.MuiAutocomplete-inputRoot[class*=\"MuiOutlinedInput-root\"]': {\r\n      padding: '0.1rem 0 0.1rem 0.5rem',\r\n      height: '3rem'\r\n    },\r\n    '& .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: '#b7b7b7'\r\n    },\r\n    '&:hover .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: '#b7b7b7'\r\n    },\r\n    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: '#b7b7b7'\r\n    }\r\n  },\r\n  paper: {\r\n    '&.MuiAutocomplete-paper': {\r\n      backgroundColor: '#e7e6e1',\r\n      margin: 0,\r\n      borderRadius: 0,\r\n      padding: 0\r\n      // width: '80%'\r\n    }\r\n  },\r\n  popupIndicator: {\r\n    '&.MuiAutocomplete-popupIndicator': {\r\n      color: '#393e46',\r\n      '& .MuiSvgIcon-root': {\r\n        width: '0.8em'\r\n      }\r\n    }\r\n  },\r\n  option: {\r\n    '&.MuiAutocomplete-option': {\r\n      color: '#B6B6B6',\r\n      fontSize: 18\r\n    }\r\n  },\r\n  clearIndicator: {\r\n    '& .MuiAutocomplete-clearIndicator': {\r\n      color: '#B6B6B6',\r\n      '&.MuiSvgIcon-fontSizeSmall': {\r\n        width: '0.5em'\r\n      }\r\n    }\r\n  }\r\n}))(Autocomplete)\r\n\r\nexport const StyledTabs = withStyles({\r\n  root: {\r\n    borderBottom: 'none',\r\n    color: '#fff',\r\n    minHeight: 25\r\n  },\r\n  indicator: {\r\n    backgroundColor: '#1A1A1A'\r\n  }\r\n})(Tabs)\r\n\r\nexport const SelectButton = withStyles((theme) => ({\r\n  root: {\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n      boxShadow: 'none'\r\n    }\r\n  }\r\n}))(Button)\r\nexport const StyleContentCard = withStyles((theme) => ({\r\n  root: {\r\n    padding: '.7rem',\r\n    maxWidth: '18rem',\r\n    width: '18rem',\r\n    '&:last-child': {\r\n      padding: '.7rem'\r\n    }\r\n  }\r\n}))(CardContent)\r\nexport const StyleActionsCard = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: '#f8fcfb'\r\n  }\r\n}))(CardActionArea)\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  typography: {\r\n    font: 'normal normal 400 28px/33px Comic Sans MS'\r\n  },\r\n  cardDailyItem: {\r\n    maxWidth: '20rem',\r\n    width: '20rem'\r\n  },\r\n  cardDailyTypography: {\r\n    font: 'normal normal 300 18px/20px Comic Sans MS',\r\n    marginBottom: '.4rem'\r\n  },\r\n  cardDailyTypographyDeg: {\r\n    font: 'normal normal 200 14px/26px Comic Sans MS',\r\n    marginLeft: 'auto'\r\n  },\r\n  cardTypographyCondiTion: {\r\n    font: 'normal normal 200 14px/26px Comic Sans MS'\r\n  },\r\n  typographyAddRemoveFav: {\r\n    font: 'normal normal 300 18px/20px Comic Sans MS'\r\n  },\r\n  favoriteIcon: {\r\n    color: '#8ea5eb',\r\n    fontSize: '5rem'\r\n  },\r\n  typographys: {\r\n    font: 'normal normal 400 28px/33px Comic Sans MS',\r\n    backgroundColor: 'green'\r\n  },\r\n  warning: {\r\n    color: '#FBC02D'\r\n  },\r\n  weatherMainItem: {\r\n    backgroundColor: '#f8fcfb',\r\n    borderRadius: 4,\r\n    padding: '5rem'\r\n  },\r\n  currentWeatherItem: {\r\n    marginBottom: '5rem'\r\n  }\r\n}))\r\n","//SECCESS\r\nexport const WEATHER_SEARCH_SUCCESS = 'WEATHER_SEARCH_SUCCESS'\r\nexport const WEATHER_FIVE_DAYS_SUCCESS = 'WEATHER_FIVE_DAYS_SUCCESS'\r\nexport const WEATHER_CURRENT_SUCCESS = 'WEATHER_CURRENT_SUCCESS'\r\nexport const ADD_WEATHER_FAVORITE_SUCCESS = 'ADD_WEATHER_FAVORITE_SUCCESS'\r\nexport const REMOVE_WEATHER_FAVORITE_SUCCESS = 'REMOVE_WEATHER_FAVORITE_SUCCESS'\r\n//ERROR\r\nexport const WEATHER_SEARCH_ERROR = 'WEATHER_SEARCH_ERROR'\r\nexport const WEATHER_FIVE_DAYS_ERROR = 'WEATHER_FIVE_DAYS_ERROR'\r\nexport const WEATHER_CURRENT_ERROR = 'WEATHER_CURRENT_ERROR'\r\nexport const ADD_WEATHER_FAVORITES_ERROR = 'ADD_WEATHER_FAVORITES_ERROR'\r\nexport const REMOVE_WEATHER_FAVORITES_ERROR = 'REMOVE_WEATHER_FAVORITES_ERROR'\r\n","export const WEATHER_URLS = {\r\n  FIVE_DAYS_FORECASTS: '/forecasts/v1/daily/5day/',\r\n  SEARCH_CITIES_AUTOCOMPLETE: '/locations/v1/cities/autocomplete',\r\n  CURRENT_CONDITIONS: '/currentconditions/v1/'\r\n}\r\n\r\nexport const BASE_URL = 'https://dataservice.accuweather.com'\r\n\r\nexport default {\r\n  WEATHER_URLS,\r\n  BASE_URL\r\n}\r\n","import {\r\n  WEATHER_SEARCH_SUCCESS,\r\n  WEATHER_SEARCH_ERROR,\r\n  WEATHER_FIVE_DAYS_SUCCESS,\r\n  WEATHER_FIVE_DAYS_ERROR,\r\n  WEATHER_CURRENT_SUCCESS,\r\n  WEATHER_CURRENT_ERROR\r\n} from '../types'\r\nimport axios from 'axios'\r\nimport { WEATHER_URLS, BASE_URL } from '../../services/api'\r\nconst apiKey = 'b5su52iphyCXS22mUWIxSTGt0U6juE2Y'\r\n\r\n// get autocomplete list from search value\r\nexport const getWeatherListSearch = (searchInput) => async (dispatch) => {\r\n  const request = {\r\n    apikey: apiKey,\r\n    q: searchInput\r\n  }\r\n  try {\r\n    const res = await axios.get(\r\n      `${BASE_URL + WEATHER_URLS.SEARCH_CITIES_AUTOCOMPLETE}?apikey=${\r\n        request.apikey\r\n      }&q=${request.q}&language=en-us`\r\n    )\r\n    dispatch({\r\n      type: WEATHER_SEARCH_SUCCESS,\r\n      payload: res.data,\r\n      searchValue: searchInput\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: WEATHER_SEARCH_ERROR,\r\n      payload: error\r\n    })\r\n  }\r\n}\r\n//get forecats five days of current weather display and fromat before dispatch\r\nexport const getWeatherFiveDays = (cityKey) => async (dispatch) => {\r\n  console.log(cityKey)\r\n  const request = {\r\n    apikey: apiKey,\r\n    cityKey\r\n  }\r\n  try {\r\n    const res = await axios.get(\r\n      `${\r\n        BASE_URL + WEATHER_URLS.FIVE_DAYS_FORECASTS + request.cityKey\r\n      }?apikey=${request.apikey}&language=en-us&details=false&metric=false`\r\n    )\r\n    const resData = res.data\r\n    var days = [\r\n      'Sunday',\r\n      'Monday',\r\n      'Tuesday',\r\n      'Wednesday',\r\n      'Thursday',\r\n      'Friday',\r\n      'Saturday'\r\n    ]\r\n    //DailyForecasts\r\n    const formatedWeatherArray = []\r\n    resData.DailyForecasts.forEach((v) => {\r\n      let a = new Date(v.EpochDate * 1000)\r\n      let obj = {}\r\n      obj.dayOfWeek = days[a.getDay()]\r\n      obj.temperature = v.Temperature\r\n      formatedWeatherArray.push(obj)\r\n      console.log(obj)\r\n    })\r\n    dispatch({\r\n      type: WEATHER_FIVE_DAYS_SUCCESS,\r\n      payload: formatedWeatherArray,\r\n      cuurWeatherKey: request.cityKey\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: WEATHER_FIVE_DAYS_ERROR,\r\n      payload: error\r\n    })\r\n  }\r\n}\r\n// get current condition\r\nexport const getCurrentWeather =\r\n  ({ cityKey, localizedName }) =>\r\n  async (dispatch) => {\r\n    const request = {\r\n      apikey: apiKey,\r\n      cityKey\r\n    }\r\n    try {\r\n      const res = await axios.get(\r\n        `${\r\n          BASE_URL + WEATHER_URLS.CURRENT_CONDITIONS + request.cityKey\r\n        }?apikey=${request.apikey}&language=en-us&details=false&metric=false`\r\n      )\r\n      const resData = res.data\r\n      console.log(resData[0])\r\n      let currWether = {\r\n        cityKey,\r\n        localizedName,\r\n        weatherText: resData[0].WeatherText,\r\n        temperature: resData[0].Temperature\r\n      }\r\n      dispatch({\r\n        type: WEATHER_CURRENT_SUCCESS,\r\n        payload: currWether,\r\n        cuurWeatherKey: request.cityKey\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: WEATHER_CURRENT_ERROR,\r\n        payload: error\r\n      })\r\n    }\r\n  }\r\nexport const getWeatherItemFormat = () => async (dispatch) => {}\r\n\r\n// import {\r\n//   WEATHER_SEARCH_SUCCESS,\r\n//   WEATHER_SEARCH_ERROR,\r\n//   WEATHER_FIVE_DAYS_SUCCESS,\r\n//   WEATHER_FIVE_DAYS_ERROR,\r\n//   WEATHER_CURRENT_SUCCESS,\r\n//   WEATHER_CURRENT_ERROR\r\n// } from '../types'\r\n// import axios from 'axios'\r\n// import { WEATHER_URLS, BASE_URL } from '../../services/api'\r\n// import MainConfig from '../../config/index.json'\r\n// const apiKey = 'b5su52iphyCXS22mUWIxSTGt0U6juE2Y'\r\n// export const getWeatherListSearch = (searchInput) => (dispatch) => {\r\n//   const request = {\r\n//     apikey: apiKey,\r\n//     q: searchInput\r\n//   }\r\n//   try {\r\n//     const res = MainConfig.data.autocompleteSearch\r\n//     dispatch({\r\n//       type: WEATHER_SEARCH_SUCCESS,\r\n//       payload: res,\r\n//       searchValue: searchInput\r\n//     })\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: WEATHER_SEARCH_ERROR,\r\n//       payload: error\r\n//     })\r\n//   }\r\n// }\r\n// export const getWeatherFiveDays = (cityKey) => (dispatch) => {\r\n//   if (!cityKey || cityKey === 0) cityKey = 215854\r\n//   const request = {\r\n//     apikey: apiKey,\r\n//     cityKey\r\n//   }\r\n//   try {\r\n//     const resData = MainConfig.data.forecastsFiveDays\r\n//     // const resData = res\r\n//     var days = [\r\n//       'Sunday',\r\n//       'Monday',\r\n//       'Tuesday',\r\n//       'Wednesday',\r\n//       'Thursday',\r\n//       'Friday',\r\n//       'Saturday'\r\n//     ]\r\n//     //DailyForecasts\r\n//     const formatedWeatherArray = []\r\n//     resData.DailyForecasts.forEach((v) => {\r\n//       let a = new Date(v.EpochDate * 1000)\r\n//       let obj = {}\r\n//       obj.dayOfWeek = days[a.getDay()]\r\n//       obj.temperature = v.Temperature\r\n//       formatedWeatherArray.push(obj)\r\n//     })\r\n//     dispatch({\r\n//       type: WEATHER_FIVE_DAYS_SUCCESS,\r\n//       payload: formatedWeatherArray,\r\n//       cuurWeatherKey: request.cityKey\r\n//     })\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: WEATHER_FIVE_DAYS_ERROR,\r\n//       payload: error\r\n//     })\r\n//   }\r\n// }\r\n// export const getCurrentWeather =\r\n//   ({ cityKey, localizedName }) =>\r\n//   (dispatch) => {\r\n//     if (!cityKey || cityKey === 0) cityKey = 215854\r\n//     const request = {\r\n//       apikey: apiKey,\r\n//       cityKey\r\n//     }\r\n//     try {\r\n//       const resData = MainConfig.data.currentConditions\r\n//       let currWether = {\r\n//         cityKey,\r\n//         localizedName,\r\n//         weatherText: resData[0].WeatherText,\r\n//         temperature: resData[0].Temperature\r\n//       }\r\n//       dispatch({\r\n//         type: WEATHER_CURRENT_SUCCESS,\r\n//         payload: currWether,\r\n//         cuurWeatherKey: request.cityKey\r\n//       })\r\n//     } catch (error) {\r\n//       dispatch({\r\n//         type: WEATHER_CURRENT_ERROR,\r\n//         payload: error\r\n//       })\r\n//     }\r\n//   }\r\n// export const getWeatherItemFormat = () => async (dispatch) => {}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useStyles } from '../../utils/UiComponents'\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core'\r\n\r\n// display five days selected weather\r\n// get props from parent component SearchWeather\r\nexport const FiveDaysWeatherList = (props) => {\r\n  const { weatherFiveDays } = props\r\n  const classes = useStyles()\r\n  //\r\n  //\r\n  return (\r\n    <Grid container direction='row' spacing={1}>\r\n      {weatherFiveDays &&\r\n        weatherFiveDays.map((u, index) => (\r\n          <Grid item xs key={index}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography className={classes.cardDailyTypography}>\r\n                  {u.dayOfWeek}\r\n                </Typography>\r\n                <Typography className={classes.cardDailyTypographyDeg}>\r\n                  {u.temperature.Minimum.Value}-{u.temperature.Maximum.Value}{' '}\r\n                  &deg; {u.temperature.Maximum.Unit}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n    </Grid>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Typography, Grid } from '@material-ui/core'\r\nimport { useStyles } from '../../utils/UiComponents'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\n\r\nfunction CurrentCityConditions(props) {\r\n  const classes = useStyles()\r\n  const { currentWeatherItem } = props\r\n  return (\r\n    <Grid container direction='column'>\r\n      <Grid item>\r\n        <Typography className={classes.typography}>\r\n          {currentWeatherItem.localizedName}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography className={classes.typography}>\r\n          {currentWeatherItem.temperature &&\r\n            currentWeatherItem.temperature.Metric.Value}{' '}\r\n          &deg;{' '}\r\n          {currentWeatherItem.temperature &&\r\n            currentWeatherItem.temperature.Metric.Unit}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default CurrentCityConditions\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getWeatherListSearch,\r\n  getWeatherFiveDays,\r\n  getCurrentWeather\r\n} from '../store/actions/weatherAction'\r\nimport {\r\n  addItemFromFavorites,\r\n  deleteItemFromFavorites\r\n} from '../store/actions/favoritesWeatherAction'\r\nimport { Grid, Typography, InputAdornment, Button } from '@material-ui/core'\r\nimport SearchIcon from '@mui/icons-material/Search'\r\nimport FavoriteIcon from '@mui/icons-material/Favorite'\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder'\r\nimport { FiveDaysWeatherList } from './subComponents/FiveDaysWeatherList'\r\nimport CurrentCityConditions from './subComponents/CurrentCityConditions'\r\nimport {\r\n  SearchValueTextField,\r\n  StyledAutoCompleteSearchValue,\r\n  useStyles,\r\n  SelectButton\r\n} from '../utils/UiComponents'\r\n\r\nconst SearchWeather = () => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const weatherList = useSelector((state) => state.weatherSearchList)\r\n  const searchValue = useSelector(\r\n    (state) => state.weatherSearchList.searchValue\r\n  )\r\n  const weatherFavoritesList = useSelector(\r\n    (state) => state.weatherFavoritesList.weatherFavoritesList\r\n  )\r\n  const cuurWeatherKeyStateInd = useSelector(\r\n    (state) => state.weatherFavoritesList.cuurWeatherKey\r\n  )\r\n  const {\r\n    loading,\r\n    error,\r\n    weatherSearchList,\r\n    weatherFiveDays,\r\n    currentWeatherItem,\r\n    cuurWeatherKey\r\n  } = weatherList\r\n\r\n  const [inputSearchValue, setInputSearchValue] = useState('tel aviv')\r\n  useEffect(() => {\r\n    if (Object.keys(currentWeatherItem).length === 0) {\r\n      let payload = {\r\n        cityKey: '215854',\r\n        localizedName: 'tel aviv'\r\n      }\r\n      console.log(currentWeatherItem)\r\n      dispatch(getWeatherFiveDays(payload.cityKey))\r\n      dispatch(getCurrentWeather(payload))\r\n      dispatch(getWeatherListSearch('tel aviv'))\r\n    }\r\n  }, [dispatch])\r\n  const handleSearchValue = (searchItem) => {\r\n    let payload = {\r\n      cityKey: searchItem.Key,\r\n      localizedName: searchItem.LocalizedName\r\n    }\r\n    dispatch(getWeatherFiveDays(searchItem.Key))\r\n    dispatch(getCurrentWeather(payload))\r\n  }\r\n  const isFavorite = () => {\r\n    if (Object.keys(currentWeatherItem).length !== 0) {\r\n      const find = weatherFavoritesList.find(\r\n        (favorite) => favorite.cityKey === currentWeatherItem.cityKey\r\n      )\r\n      if (cuurWeatherKeyStateInd && find) {\r\n        return true\r\n      } else return false\r\n    }\r\n    return false\r\n  }\r\n  const toggleFavoriteWeather = () => {\r\n    if (\r\n      cuurWeatherKeyStateInd &&\r\n      weatherFavoritesList.find(\r\n        (favorite) => favorite.cityKey === currentWeatherItem.cityKey\r\n      )\r\n    ) {\r\n      let cityKey = currentWeatherItem.cityKey\r\n      dispatch(deleteItemFromFavorites(cityKey))\r\n    } else {\r\n      dispatch(addItemFromFavorites(currentWeatherItem))\r\n    }\r\n  }\r\n  const handleSearchValueInput = (e, searchItem) => {\r\n    setInputSearchValue(searchItem)\r\n    if (searchItem !== searchValue) dispatch(getWeatherListSearch(searchItem))\r\n  }\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs></Grid>\r\n      <Grid item xs={9}>\r\n        <Grid container direction='column' justify='center'>\r\n          {/* search */}\r\n          <Grid item align='center'>\r\n            <StyledAutoCompleteSearchValue\r\n              disableClearable\r\n              id='combo-box-demo'\r\n              forcePopupIcon={false}\r\n              options={weatherSearchList}\r\n              getOptionLabel={(option) => option.LocalizedName}\r\n              onChange={(event, newValue) => handleSearchValue(newValue)}\r\n              onInputChange={handleSearchValueInput}\r\n              renderInput={(params) => {\r\n                return (\r\n                  <SearchValueTextField\r\n                    {...params}\r\n                    variant='outlined'\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      style: {\r\n                        color: '#393e46',\r\n                        font: ' normal normal 300 14px/16px Ubuntu',\r\n                        padding: '0',\r\n                        borderRadius: '0'\r\n                      },\r\n                      endAdornment: (\r\n                        <InputAdornment>\r\n                          <SearchIcon />\r\n                        </InputAdornment>\r\n                      )\r\n                    }}\r\n                    fullWidth\r\n                  />\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n          {/* selected weather */}\r\n          <Grid item>\r\n            <Grid\r\n              container\r\n              direction='column'\r\n              className={classes.weatherMainItem}\r\n            >\r\n              {/* curr and favorite toggle */}\r\n              <Grid item>\r\n                <Grid\r\n                  container\r\n                  justify='space-between'\r\n                  className={classes.currentWeatherItem}\r\n                >\r\n                  {/* current weather */}\r\n                  <Grid item>\r\n                    <CurrentCityConditions\r\n                      currentWeatherItem={currentWeatherItem}\r\n                    />\r\n                  </Grid>\r\n                  {/* toggle favorite */}\r\n                  <Grid item>\r\n                    <Grid container direction='row'>\r\n                      <Grid item>\r\n                        <Typography className={classes.typographyAddRemoveFav}>\r\n                          {isFavorite() ? 'Remove from ' : 'Add to '}\r\n                          favorites\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <SelectButton\r\n                          onClick={() => toggleFavoriteWeather()}\r\n                          style={{ padding: '0' }}\r\n                        >\r\n                          {isFavorite() ? (\r\n                            <FavoriteIcon className={classes.favoriteIcon} />\r\n                          ) : (\r\n                            <FavoriteBorderIcon\r\n                              className={classes.favoriteIcon}\r\n                            />\r\n                          )}\r\n                        </SelectButton>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              {/* five days */}\r\n              <Grid item>\r\n                <FiveDaysWeatherList weatherFiveDays={weatherFiveDays} />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs></Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default SearchWeather\r\n","//add or remove from favorites list\r\n//\r\nimport {\r\n  ADD_WEATHER_FAVORITE_SUCCESS,\r\n  REMOVE_WEATHER_FAVORITE_SUCCESS,\r\n  ADD_WEATHER_FAVORITES_ERROR,\r\n  REMOVE_WEATHER_FAVORITES_ERROR\r\n} from '../types'\r\n\r\nexport const addItemFromFavorites = (currWether) => (dispatch) => {\r\n  dispatch({\r\n    type: ADD_WEATHER_FAVORITE_SUCCESS,\r\n    payload: currWether\r\n  })\r\n}\r\nexport const deleteItemFromFavorites = (cityKey) => (dispatch) => {\r\n  dispatch({\r\n    type: REMOVE_WEATHER_FAVORITE_SUCCESS,\r\n    payload: cityKey\r\n  })\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getWeatherFiveDays,\r\n  getCurrentWeather\r\n} from '../store/actions/weatherAction'\r\nimport {\r\n  useStyles,\r\n  StyleContentCard,\r\n  StyleActionsCard\r\n} from '../utils/UiComponents'\r\nimport { Card, Typography, Grid } from '@material-ui/core'\r\n\r\n// fevorites list of weather\r\n// get props of click display when toggle on fevorite item\r\n// when clicked dosplay item on home page\r\nexport const FevoritesWeatherCities = (props) => {\r\n  const { clickHandler } = props\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const weatherFavoritesList = useSelector(\r\n    (state) => state.weatherFavoritesList.weatherFavoritesList\r\n  )\r\n  const favoritesListLength = useSelector(\r\n    (state) => state.weatherFavoritesList.favoritesListLength\r\n  )\r\n  const displayFavoriteItem = (favoriteItem) => {\r\n    clickHandler()\r\n    let payload = {\r\n      cityKey: favoriteItem.cityKey,\r\n      localizedName: favoriteItem.localizedName\r\n    }\r\n\r\n    dispatch(getCurrentWeather(payload))\r\n    dispatch(getWeatherFiveDays(favoriteItem.cityKey))\r\n  }\r\n  useEffect(() => {}, [dispatch])\r\n  return (\r\n    <Grid container direction='row' spacing={1}>\r\n      {weatherFavoritesList &&\r\n        weatherFavoritesList.map((favoriteItem, index) => (\r\n          <Grid item key={index}>\r\n            <Card className={classes.cardDailyItem}>\r\n              <StyleActionsCard\r\n                disableSpacing\r\n                onClick={() => displayFavoriteItem(favoriteItem)}\r\n              >\r\n                <StyleContentCard>\r\n                  <Typography className={classes.cardDailyTypography}>\r\n                    {favoriteItem.localizedName}\r\n                  </Typography>\r\n                </StyleContentCard>\r\n                <Typography className={classes.cardTypographyCondiTion}>\r\n                  {favoriteItem.weatherText}\r\n                </Typography>\r\n                <Typography className={classes.cardDailyTypographyDeg}>\r\n                  {favoriteItem.temperature &&\r\n                    favoriteItem.temperature.Metric.Value}{' '}\r\n                  &deg;{' '}\r\n                  {favoriteItem.temperature &&\r\n                    favoriteItem.temperature.Metric.Unit}\r\n                </Typography>\r\n              </StyleActionsCard>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n    </Grid>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { AppBar, Tabs, Tab, Typography, Box } from '@material-ui/core'\r\nimport { StyledTabs } from '../utils/UiComponents'\r\nimport SearchWeather from '../components/SearchWeather'\r\nimport { FevoritesWeatherCities } from '../components/FevoritesWeatherCities'\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props\r\n\r\n  return (\r\n    <div\r\n      role='tabpanel'\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}))\r\n\r\nexport default function HomeWeather() {\r\n  const classes = useStyles()\r\n  const [value, setValue] = React.useState(0)\r\n  const handleChange = (event, newValue) => {\r\n    if (!newValue) newValue = 0\r\n    setValue(newValue)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static'>\r\n        <StyledTabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label='simple tabs example'\r\n        >\r\n          <Tab label='Home' {...a11yProps(0)} />\r\n          <Tab label='Fevorites' {...a11yProps(1)} />\r\n        </StyledTabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <SearchWeather />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <FevoritesWeatherCities clickHandler={handleChange} />\r\n      </TabPanel>\r\n    </div>\r\n  )\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport {\r\n  WEATHER_SEARCH_SUCCESS,\r\n  WEATHER_SEARCH_ERROR,\r\n  WEATHER_FIVE_DAYS_SUCCESS,\r\n  WEATHER_FIVE_DAYS_ERROR,\r\n  WEATHER_CURRENT_SUCCESS,\r\n  WEATHER_CURRENT_ERROR\r\n} from '../types'\r\n\r\nconst initialState = {\r\n  weatherSearchList: [],\r\n  searchValue: '',\r\n  weatherFiveDays: [],\r\n  cuurWeatherKey: 0,\r\n  currentWeatherItem: {},\r\n  loading: true\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case WEATHER_SEARCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        weatherSearchList: action.payload,\r\n        searchValue: action.searchValue,\r\n        loading: false\r\n      }\r\n    case WEATHER_SEARCH_ERROR:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    case WEATHER_FIVE_DAYS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        weatherFiveDays: action.payload,\r\n        cuurWeatherKey: action.cuurWeatherKey,\r\n        loading: false\r\n      }\r\n    case WEATHER_FIVE_DAYS_ERROR:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    case WEATHER_CURRENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentWeatherItem: action.payload,\r\n        cuurWeatherKey: action.cuurWeatherKey,\r\n        loading: false\r\n      }\r\n    case WEATHER_CURRENT_ERROR:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport {\r\n  ADD_WEATHER_FAVORITE_SUCCESS,\r\n  REMOVE_WEATHER_FAVORITE_SUCCESS,\r\n  WEATHER_CURRENT_SUCCESS,\r\n  ADD_WEATHER_FAVORITES_ERROR,\r\n  REMOVE_WEATHER_FAVORITES_ERROR,\r\n  WEATHER_CURRENT_ERROR\r\n} from '../types'\r\n\r\nconst initialState = {\r\n  weatherFavoritesList: [],\r\n  favoritesListLength: 0,\r\n  cuurWeatherKey: 0,\r\n  loading: true\r\n}\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_WEATHER_FAVORITE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        weatherFavoritesList: [...state.weatherFavoritesList, action.payload],\r\n        favoritesListLength: state.favoritesListLength + 1,\r\n        loading: false\r\n      }\r\n    case ADD_WEATHER_FAVORITES_ERROR:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    case REMOVE_WEATHER_FAVORITE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        weatherFavoritesList: state.weatherFavoritesList.filter(\r\n          (favorite) => favorite.cityKey !== action.payload\r\n        ),\r\n        favoritesListLength: state.favoritesListLength - 1,\r\n        loading: false\r\n      }\r\n    case REMOVE_WEATHER_FAVORITES_ERROR:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    case WEATHER_CURRENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        cuurWeatherKey: action.cuurWeatherKey\r\n      }\r\n    case WEATHER_CURRENT_ERROR:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport weatherReducer from './weatherReducer'\r\nimport favoritesWeatherReducer from './favoritesWeatherReducer'\r\n\r\nexport default combineReducers({\r\n  weatherSearchList: weatherReducer,\r\n  weatherFavoritesList: favoritesWeatherReducer\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport rootReducer from './reducers'\r\n\r\nconst initalState = {}\r\nconst middleware = [thunk]\r\nconst store = createStore(\r\n  rootReducer,\r\n  initalState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import HomeWeather from './pages/HomeWeather'\r\n\r\nimport store from './store/store'\r\nimport { Provider } from 'react-redux'\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\r\nfunction App() {\r\n  const mainTheme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#323232'\r\n      },\r\n      secondary: {\r\n        main: '#FBFBFB'\r\n      }\r\n    },\r\n    typography: {\r\n      fontFamily: [\r\n        `'Ubuntu', \r\n        sans-serif,\r\n        'Ubuntu Mono', \r\n        monospace`\r\n      ].join(',')\r\n    }\r\n  })\r\n  return (\r\n    <ThemeProvider theme={mainTheme}>\r\n      <Provider store={store}>\r\n        <HomeWeather />\r\n      </Provider>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}